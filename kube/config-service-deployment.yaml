apiVersion: v1
kind: Service
metadata:
  name: config-service
  labels:
    app: config-service
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: config-service
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: config-service-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: config-service
        version: v1
    spec:
      containers:
        - name: config-service
          image: gcr.io/mtech-wms-backstage-poc/appconfig-image:0.2
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
          env:
          - name: DB_HOST
            value: 127.0.0.1:3306
          - name: DB_URL
            value: jdbc:mysql://127.0.0.1/configdb?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
          - name: DATABASE
            value: configdb
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials-configdb
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials-configdb
                key: password
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                "-instances=mtech-wms-backstage-poc:us-east4:backstage-db-1=tcp:3306",
                "-credential_file=/secrets/cloudsql/credentials.json"]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        # [END volumes]
      
